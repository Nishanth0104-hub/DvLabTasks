1A. 
import pandas as pd

census = pd.read_csv("indian_census.csv")
print("Rows,Cols:", census.shape)
print("\nColumns:\n", census.columns.tolist())
print("\nHead:\n", census.head())
print("\nDtypes:\n", census.dtypes)
print("\nSummary (numerical):\n", census.describe(include='number').T)
print("\nNulls per column:\n", census.isna().sum())

1B.
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>Top 10 Cities (D3)</title>
  <script src="https://d3js.org/d3.v7.min.js"></script>
  <style>
    .bar { fill: steelblue; }
    .axis text { font-size: 12px; }
  </style>
</head>
<body>
  <svg width="900" height="500"></svg>
  <script>
    const svg = d3.select("svg"),
          margin = {top:40, right:20, bottom:100, left:80},
          width = +svg.attr("width") - margin.left - margin.right,
          height = +svg.attr("height") - margin.top - margin.bottom;

    const g = svg.append("g").attr("transform", `translate(${margin.left},${margin.top})`);

    // Replace with d3.csv("indian_census.csv").then(...)
    const data = [
      /* Example placeholder if you don't load CSV from server:
      {City:"Mumbai",Population:12442373},...
      */
    ];

    // If loading CSV uncomment:
    // d3.csv("indian_census.csv", d => ({City: d.City, Population: +d.Population}))
    //   .then(draw);

    function draw(data) {
      data = data.sort((a,b)=>b.Population-a.Population).slice(0,10);
      const x = d3.scaleBand().domain(data.map(d=>d.City)).range([0,width]).padding(0.2);
      const y = d3.scaleLinear().domain([0, d3.max(data, d=>d.Population)]).nice().range([height,0]);

      g.append("g").call(d3.axisLeft(y));
      g.append("g").attr("transform", `translate(0,${height})`).call(d3.axisBottom(x)).selectAll("text")
        .attr("transform","rotate(-40)")
        .style("text-anchor","end");

      g.selectAll(".bar").data(data).enter().append("rect")
        .attr("class","bar")
        .attr("x", d => x(d.City))
        .attr("y", d => y(d.Population))
        .attr("width", x.bandwidth())
        .attr("height", d => height - y(d.Population));
    }
  </script>
</body>
</html>

